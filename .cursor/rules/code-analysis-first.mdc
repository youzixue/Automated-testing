---
description: 开始任何实现前必须优先分析已有代码，避免重复实现或不一致开发
globs: ["**/*.py"]
alwaysApply: true
priority: 90
---
# 代码分析优先

在开始任何实现前必须优先分析已有代码，避免重复实现或不一致开发。

## 关键实践
- 开始新功能实现前必须先检查现有代码库
- 使用相似功能的关键词进行搜索，确认是否已有实现
- 新代码必须与现有代码保持一致的命名风格和设计模式
- 优先扩展现有类和方法，而非创建重复功能

## 目录分析步骤
1. 分析项目根目录结构，了解大致组织方式
2. 检查src目录下的模块分布
3. 查阅相关模块的代码实现
4. 搜索类似功能或方法名，确认是否已经存在

## 代码搜索示例
```python
# 开始实现前先搜索是否已有类似实现
grep_search("class.*Driver") # 查找所有Driver相关类
grep_search("wait_for_element") # 查找等待元素的方法
file_search("element.py") # 查找element相关文件
```

## 代码重构原则
- 重构时必须先找到所有对原代码的引用
- 创建新文件前，确认是否可以扩展或修改现有文件
- 引入新功能前，确保不会与现有功能冲突
- **代码移动完成后必须立即删除旧的冗余代码，不允许保留旧实现**
- 确保测试覆盖重构的功能
- **重构是完整过程，包括删除旧代码是必要步骤，不得省略**

## 文件参考
- @src/core/base/
- @src/web/
- @src/utils/
[tool.poetry]
name = "automated-testing"
version = "0.1.0"
description = "自动化测试框架，集成Playwright、httpx、airtest和Allure报告"
authors = ["Youzixue <863819494@qq.com>"]
readme = "README.md"
packages = [{include = "src"}]

# 配置PyPI源，优先使用国内镜像加速
# [[tool.poetry.source]]
# name = "aliyun"
# url = "https://mirrors.aliyun.com/pypi/simple/"

# 尝试使用华为云镜像源
[[tool.poetry.source]]
name = "huaweicloud"
url = "https://repo.huaweicloud.com/repository/pypi/simple/"
priority = 'primary'

# ==============================================
# 依赖管理
# ==============================================

# 主要依赖
[tool.poetry.dependencies]
python = ">=3.11,<3.12"

# 核心依赖
playwright = "1.51.0"          # Web端自动化测试引擎
python-dotenv = "1.1.0"        # 环境变量管理
pyyaml = "6.0.2"               # 配置文件解析

# OCR相关依赖
pillow = "<10"                 # 图像处理 (固定<10兼容ddddocr的旧API)
ddddocr = "1.5.6"              # 验证码识别
numpy = "^1.26.4"              # 数值计算 (修正为有效版本)
onnxruntime = "^1.18.0"         # 更新 onnxruntime 尝试解决 pyreadline3 依赖问题

# API测试依赖
httpx = "0.27.0"               # HTTP客户端

# 数据验证
pydantic = "2.6.3"             # 数据模型和验证
jsonschema = "4.21.1"          # JSON结构验证

# 测试框架 - 移动自dev依赖到主依赖
pytest = "8.3.5"               # 测试框架
pytest-playwright = "0.4.4"    # Playwright集成
allure-pytest = "2.14.0"       # Allure报告集成
pytest-xdist = "3.6.1"         # 并行测试
pytest-rerunfailures = "12.0"  # 失败用例重试
pytest-html = "4.1.1"          # HTML报告
pytest-asyncio = "0.26.0"      # 异步测试

# 开发工具依赖
[tool.poetry.group.dev.dependencies]
# 代码质量工具
black = "23.12.1"              # 代码格式化
pylint = "3.3.6"               # 代码静态分析
mypy = "1.15.0"                # 类型检查
pre-commit = "3.8.0"           # Git提交前检查

# 剩余非核心测试工具
pytest-cov = "4.1.0"           # 覆盖率报告
pytest-mock = "3.14.0"         # Mock支持

# 工具依赖
astroid = "3.3.9"
cfgv = "3.4.0"
click = "8.1.8"
colorama = "0.4.6"
coverage = "7.8.0"
dill = "0.3.9"
distlib = "0.3.9"
filelock = "3.18.0"
identify = "2.6.9"
iniconfig = "2.1.0"
isort = "6.0.1"
mccabe = "0.7.0"
mypy-extensions = "1.0.0"
nodeenv = "1.9.1"
packaging = "24.2"
pathspec = "0.12.1"
platformdirs = "4.3.7"
pluggy = "1.5.0"
tomlkit = "0.13.2"
virtualenv = "20.30.0"

# ==============================================
# 构建系统
# ==============================================

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ==============================================
# 工具配置
# ==============================================

# Black格式化工具配置
[tool.black]
line-length = 100
target-version = ["py311"]

# Pylint配置
[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

[tool.pylint.format]
max-line-length = 100

# MyPy类型检查配置
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

# Pytest配置
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
pythonpath = ["."]
addopts = "-ra --tb=short --strict-markers"
log_cli = true
log_cli_level = "INFO"
markers = [
    "web: web端自动化测试",
    "api: 接口自动化测试", 
    "mobile: 移动端自动化测试",
    "wechat: 微信小程序or公众号测试",
    "smoke: 冒烟测试",
    "regression: 回归测试",
    "slow: 慢速用例",
    "negative: 异常场景测试",
]

# Deptry依赖检查工具配置
[tool.deptry]
# 本地源码目录
known_first_party = ["src", "tests", "ci"]

# 包名和导入模块名映射
[tool.deptry.package_module_name_map]
"python-dotenv" = ["dotenv"]
"pillow" = ["PIL"]
"pyyaml" = ["yaml"]

# 忽略未使用依赖的检查
ignore_unused = [
    "pytest",
    "pytest-playwright",
    "allure-pytest",
    "pytest-xdist",
    "pytest-rerunfailures",
    "pytest-html",
    "pytest-cov",
    "pytest-mock",
    "pytest-asyncio",
    "pytest-base-url", 
    "pytest-metadata"
]
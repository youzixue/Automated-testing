[tool.poetry]
name = "automated-testing"
version = "0.1.0"
description = "自动化测试框架，集成Playwright、OCR和Allure报告"
authors = ["Youzixue <863819494@qq.com>"]
readme = "README.md"
packages = [{include = "src"}]

[[tool.poetry.source]]
name = "tuna"
url = "https://pypi.tuna.tsinghua.edu.cn/simple"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
playwright = "1.51.0"
python-dotenv = "1.1.0"
pillow = "9.5.0"
ddddocr = "1.5.6"
pyyaml = "6.0.2"
numpy = "2.2.4"
onnxruntime = "1.21.0"

[tool.poetry.group.dev.dependencies]
astroid = "3.3.9"
cfgv = "3.4.0"
click = "8.1.8"
colorama = "0.4.6"
coverage = "7.8.0"
dill = "0.3.9"
distlib = "0.3.9"
filelock = "3.18.0"
identify = "2.6.9"
iniconfig = "2.1.0"
isort = "6.0.1"
mccabe = "0.7.0"
mypy-extensions = "1.0.0"
nodeenv = "1.9.1"
packaging = "24.2"
pathspec = "0.12.1"
platformdirs = "4.3.7"
pluggy = "1.5.0"
tomlkit = "0.13.2"
virtualenv = "20.30.0"

# Moved from dependencies
pytest = "8.3.5"
pytest-playwright = "0.4.4"
allure-pytest = "2.14.0"
pytest-xdist = "3.6.1"
pytest-rerunfailures = "12.0"
pytest-html = "4.1.1"
pytest-asyncio = "0.26.0"
pytest-cov = "4.1.0"
pytest-mock = "3.14.0"
pre-commit = "3.8.0"
black = "23.12.1"
pylint = "3.3.6"
mypy = "1.15.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

[tool.pylint.format]
max-line-length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "web: Web UI tests",
    "api: API tests",
    "mobile: Mobile tests",
    "wechat: WeChat tests",
    "smoke: Smoke tests",
    "regression: Regression tests",
    "slow: Slow running tests",
    "ui: Tests that require UI",
    "security: Security tests",
    "performance: Performance tests",
    "login: Login related tests",
]
# pytest-xdist并发执行建议：
# 推荐命令：pytest -n auto  # 自动根据CPU核心数并发
# 或 pytest -n 4  # 指定4个worker并发
# 如需每个worker独立临时目录，可加--dist=loadscope
# 如需自动重试失败用例，可加--reruns=2 

[tool.deptry]
# 告诉 deptry 项目的本地源码目录
known_first_party = ["src", "tests", "ci"]

# 解决包名和导入模块名不一致的问题
[tool.deptry.package_module_name_map]
"python-dotenv" = ["dotenv"]
"pillow" = ["PIL"]
"pyyaml" = ["yaml"]

# 忽略 pytest 及其插件被误报为未使用（它们通过命令行调用）
ignore_unused = [
    "pytest",
    "pytest-playwright",
    "allure-pytest",
    "pytest-xdist",
    "pytest-rerunfailures",
    "pytest-html",
    "pytest-cov",
    "pytest-mock",
    "pytest-asyncio",  # 添加 pytest-asyncio
    "pytest-base-url", # 添加 pytest-base-url
    "pytest-metadata"  # 添加 pytest-metadata
]

# 如果有其他需要忽略的特定模块报错，可以添加到这里
# ignore_missing = []
# ignore_misplaced_dev = []
# ignore_transitive = [] 